#include <iostream>

class Node
{
public:
	int data;
	Node *next;
	Node(int data)
	{
		this->data = data;
		this->next = NULL;
	}
};

using namespace std;
#include "solution.h"
void reverseLinkedList(Node *head, Node *tail) {
  // Write your code here
  Node *current = head;
  if (current != tail) {
    int temp = current->data;
    current->data = tail->data;
    tail->data = temp;
    while (current->next != tail)
      current = current->next;
    if (head->next == tail)
      return;
    reverseLinkedList(head->next, current);
  } else
    return;
}
Node *reverseLinkedListRec(Node *head) {
  // Write your code here
  if (head == NULL)
    return head;
  Node *tail = head;
  while (tail->next != NULL)
    tail = tail->next;
  reverseLinkedList(head, tail);
  return head;
}
Node *takeinput()
{
	int data;
	cin >> data;
	Node *head = NULL, *tail = NULL;
	while (data != -1)
	{
		Node *newnode = new Node(data);
		if (head == NULL)
		{
			head = newnode;
			tail = newnode;
		}
		else
		{
			tail->next = newnode;
			tail = newnode;
		}
		cin >> data;
	}
	return head;
}

void print(Node *head)
{
	Node *temp = head;
	while (temp != NULL)
	{
		cout << temp->data << " ";
		temp = temp->next;
	}
	cout << endl;
}

int main()
{
	int t;
	cin >> t;

	while(t--)
	{
		Node *head = takeinput();
		head = reverseLinkedListRec(head);
		print(head);
	}

	return 0;
}
