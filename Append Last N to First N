#include <iostream>

class Node
{
public:
	int data;
	Node *next;
	Node(int data)
	{
		this->data = data;
		this->next = NULL;
	}
};

using namespace std;
#include "solution.h"
int length(Node *head) {
  // Write your code here
  if (head == NULL)
    return 0;
  else
    return 1 + length(head->next);
}
Node *appendLastNToFirst(Node *head, int n) {
  // Write your code here
  int len = length(head);
  if (n < len && n != 0) {
    int skip = len - n;
    Node *current = head;
    Node *prev = NULL;
    while (skip) {
      prev = current;
      current = current->next;
      skip--;
    }
    prev->next = NULL;
    Node *temp = current;
    while (current->next != NULL) {
      current = current->next;
    }
    current->next = head;
    head = temp;
  }
  return head;
}
Node *takeinput()
{
	int data;
	cin >> data;
	Node *head = NULL, *tail = NULL;
	while (data != -1)
	{
		Node *newnode = new Node(data);
		if (head == NULL)
		{
			head = newnode;
			tail = newnode;
		}
		else
		{
			tail->next = newnode;
			tail = newnode;
		}
		cin >> data;
	}
	return head;
}

void print(Node *head)
{
	Node *temp = head;
	while (temp != NULL)
	{
		cout << temp->data << " ";
		temp = temp->next;
	}
	cout << endl;
}

int main()
{
	int t;
	cin >> t;
	while (t--)
	{
		Node *head = takeinput();
		int n;
		cin >> n;
		head = appendLastNToFirst(head, n);
		print(head);
	}
	return 0;
}
